{ scopeName = 'source.brs';
  comment = 'BrightScript Dictionary';
  fileTypes = ( 'brs', 'bas' );
  foldingStartMarker = '(?i)^\s*(sub|if|f(or( each)?|unction)|while)\s*([a-zA-Z_]\w*)\s*(\(.*\)\s*)?$';
  foldingStopMarker = '(?i)^\s*(next|e(nd(if| (sub|if|function))|xit( while)?))\s*$';
  patterns = (
    { name = 'meta.function.brs';
      match = '^\s*((?i:function|sub))\s*([a-zA-Z_]\w*)\s*(\()([^)]*)(\)).*\n?';
      captures = {
        1 = { name = 'storage.type.function.brs'; };
        2 = { name = 'entity.name.function.brs'; };
        3 = { name = 'punctuation.definition.parameters.brs'; };
        4 = { name = 'variable.parameter.function.brs'; };
        5 = { name = 'punctuation.definition.parameters.brs'; };
      };
    },
    { name = 'comment.line.apostrophe.brs';
      match = "(').*$\n?";
      captures = { 1 = { name = 'punctuation.definition.comment.brs'; }; };
    },
    { name = 'comment.line.rem.brs';
      match = '^\s*?(?i:rem).*$\n?';
      captures = { 1 = { name = 'punctuation.definition.comment.brs'; }; };
    },
    { name = 'string.quoted.double.brs';
      begin = '"';
      end = '"(?!")';
      beginCaptures = { 0 = { name = 'punctuation.definition.string.begin.brs'; }; };
      endCaptures = { 0 = { name = 'punctuation.definition.string.end.brs'; }; };
      patterns = (
        { name = 'constant.character.escape.apostrophe.brs';
          match = '""';
        },
      );
    },
    { name = 'keyword.control.brs';
      match = '(?i:\b(st(op|ep)|next|i(n|f)|t(hen|o)|dim|print|e(nd(if| function)?|lse(if)?|xit while)|f(or( each)?|unction)|while|re(turn|m)|goto)\b)';
    },
    { name = 'keyword.operator.brs';
      match = '=|>=|<zz|>|<|<>|\+|-|\*|\/|\^|&|\b(?i:(And|Not|Or))\b';
    },
    { name = 'storage.type.brs';
      match = '(?i:\b(string|in(te(rface|ger)|valid)|object|double|float|b(oolean|rsub))\b)';
    },
    { name = 'constant.language.brs';
      match = '(?i:\b(Empty|False|Nothing|Null|True|Invalid)\b)';
    },
    { name = 'variable.other.brs';
      match = '(\$)[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\b';
      captures = { 1 = { name = 'punctuation.definition.variable.brs'; }; };
    },
    { name = 'support.class.brs';
      begin = '(CreateObject)\(';
      end = '\)';
      beginCaptures = { 0 = { name = 'support.class.collections.brs'; }; };
      endCaptures = { 0 = { name = 'support.class.collections.brs'; }; };
      //  match = '(?i:\b(if(XML(Element|List)|MessagePort|B(yteArray|oolean|rSub)|String(Ops)?|Int|Enum|Float|List|A(ssociativeArray|rray))|ro(R(ss(Parser|Article)|e(sourceManager|ctangle|ad(File|WriteFile)|gistry(Section)?))|G(pio(Button|ControlPort)|lobal)|XML(Element|List)|MessagePort|B(yteArray|oolean|r(Sub|ightPackage))|S(ystemTime|t(orageInfo|ring)|erialPort)|NetworkConfiguration|C(ontrol(Down|Up|Port)|lockWidget|reateFile)|T(imer|ouchScreen|ext(Field|Widget))|I(RRemote|n(t|valid)|mage(Player|Widget))|D(eviceInfo|at(eTime|agram(Receiver|Sender)))|Url(Transfer|Event)|Video(Mode|Input|Player|Event)|Keyboard(Press)?|Quadravox(Button|SNS5)|Float|List|A(ssociativeArray|udio(Player|Event)|ppendFile|rray)))\b)';
      patterns = (
        { include = '#class_names'; },
      );
    },
    { name = 'support.class.collection.brs';
      match = '(?i:\b(Contents|StaticObjects|ClientCertificate|Cookies|Form|QueryString|ServerVariables)\b)';
    },
    { name = 'support.constant.brs';
      match = '(?i:\b(TotalBytes|Buffer|CacheControl|Charset|ContentType|Expires|ExpiresAbsolute|IsClientConnected|PICS|Status|ScriptTimeout|CodePage|LCID|SessionID|Timeout)\b)';
    },
    { name = 'support.function.brs';
      match = '(?i:\b((R(nd|ight|un|e(set(Index)?|ad(File|AsciiFile)|move(Head|Tail|Index)|bootSystem))|Ge(nXML(Header)?|t(Message|Bo(olean|dy)|S(tring|ignedByte|ub)|Head|Name(dElements)?|ChildElements|T(ext|ail)|In(t(erface)?|dex)|Ent(ityEncode|ry)|Float|LastRun(RuntimeError|CompileError)|Attributes))|M(id|D5|atchFiles)|Bo(olean|x)|S(hift|tr(i(ng)?)?|i(n|mplify)|et(Resize|ModeCaseSensitive|Bo(olean|dy)|S(tring|ub)|Name|Int|Entry|Float)|qr|leep|gn)|HasAttribute|Next|C(sng|hr|o(s|unt|pyFile)|dbl|lear|reate(Object|Directory))|T(ype|o(Base64String|HexString|kenize|AsciiString)|an|rim)|I(s(N(ext|ame)|Empty|LittleEndianCPU)|n(str|t(e(rface|ger))?|valid))|Object|D(ynamic|o(uble|esExist)|elete(Directory|File)?)|U(nshift|Case|pTime)|P(o(stMessage|p)|ush|eek|arse)|Exp|V(oid|al)|F(ix|ormatDrive|unction|loat|rom(Base64String|HexString|AsciiString))|W(hile|ait(Message)?|rite(File|AsciiFile))|L(istDir|o(okup|g)|Case|e(n|ft))|A(s(c)?|tn|dd(Replace|BodyElement|Head|Tail|Element(WithBody)?|Attribute)|ppend(String|File)?|bs)))\b)';
    },
    { name = 'support.function.event.brs';
      match = '(?i:\b(Application_OnEnd|Application_OnStart|OnTransactionAbort|OnTransactionCommit|Session_OnEnd|Session_OnStart|Class_Initialize|Class_Terminate)\b)';
    },
    { name = 'constant.numeric.brs';
      match = '\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\b';
    },
  );
  repository = {
    class_names = {
      name = 'support.class.brs.source';
      match = '(?i:\b(if(XML(Element|List)|MessagePort|B(yteArray|oolean|rSub)|String(Ops)?|Int|Enum|Float|List|A(ssociativeArray|rray))|ro(R(ss(Parser|Article)|e(sourceManager|ctangle|ad(File|WriteFile)|gistry(Section)?))|G(pio(Button|ControlPort)|lobal)|XML(Element|List)|MessagePort|B(yteArray|oolean|r(Sub|ightPackage))|S(ystemTime|t(orageInfo|ring)|erialPort)|NetworkConfiguration|C(ontrol(Down|Up|Port)|lockWidget|reateFile)|T(imer|ouchScreen|ext(Field|Widget))|I(RRemote|n(t|valid)|mage(Player|Widget))|D(eviceInfo|at(eTime|agram(Receiver|Sender)))|Url(Transfer|Event)|Video(Mode|Input|Player|Event)|Keyboard(Press)?|Quadravox(Button|SNS5)|Float|List|A(ssociativeArray|udio(Player|Event)|ppendFile|rray)))\b)';
    };

  };
}